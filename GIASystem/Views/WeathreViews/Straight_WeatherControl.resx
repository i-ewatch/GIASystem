<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v20.1" name="DevExpress.Utils.v20.1, Version=20.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v20.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYyMC4xLCBWZXJzaW9uPTIwLjEu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAADIAAAA8AAAACQUAAAAP
        BQAAAEUVAAACAQwAAIlQTkcNChoKAAAADUlIRFIAAAAyAAAAPAgGAAAAJDXpwQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAujSURBVGhD7ZoLcJTVFcej1UKt1vfUalGh4KBURoUWikrM
        9wiRRymUUOWV/fbbJIBYBFRUhM0DCIhBaKkjAi1SLQpFHGnHoiNYWlAxCIHNt/ttCBQQkUCLKFZFx/R3
        lpvsI7sxCTHolDPzn/vtPfeee/73ce4jSTst31SZP39+m5KSkgsFfr//XLLOOKFpOWmNNtJmzJhx6/Tp
        059QGC2NKlWLSWu0kYbhPFAjKC4ufn7OnDnfVaoWk9Zo45tHZNasWT8sKirqFoPrZb4ma4SyVyaUbS6a
        0kYXyp6j3E0tGBmNkZdrwe+npaFkjTCnx8eWbS6a2MaSmTNnXqPcTS0YmVtrTGEPlXuT9gOvCPhdQK+0
        5VsWZWzZ5qLRbZAfJO2u3E0tFEpKhJ65lO/uAn7/iEbO5LtFiTSmjZMhcojK00izk0CmRWzZ5qLRbZwM
        kc+ovJ90ZxIcBbFlm4tGt3EyRL5W+L8lcoBwuJjFNysW5JdiyFWYm6gnbxE4AN5K1Amo/xz4CLyaTE+9
        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
</value>
  </data>
</root>