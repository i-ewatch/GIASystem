<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v20.1" name="DevExpress.Utils.v20.1, Version=20.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v20.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYyMC4xLCBWZXJzaW9uPTIwLjEu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAA0AwAACQUAAAAP
        BQAAAIEHAAACjQMAAIlQTkcNChoKAAAADUlIRFIAAAAQAAADNAgGAAAAsiai3AAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiMAAC4jAXilP3YAAAMvSURBVHhe7dS9a1NhFMfxFAexDoKjCgpugrNQXcSpu7OO
        nXRRUPQvcBN0ceomCOIqiKKLk4vaLaBTM/WFvNwkRmuu55eckCY5N03us8n3wJeCec4nT26ClU6nk7fb
        7QNrK8uy+/1+/2RlmRFwOEO2rfU8z1f8yPyZBpTf6O5CSAQoA/5aG36seKLlUQb8abVaN/xoPNHiVNv1
        ev20H5+dYGEmu8lm4fOIFqbT82g0Gmu+MjnRQpQhH8JbRIejDDiwW1zxtfFEh4uyH9hrXxtPdLAou8Xv
        brd7wVeHEx2cl93ika8OJzo0L7vF94mHGR2alx6mfYyLvr484D3w9XKA3eKjr5cGftl/PCdKA8qew/Uk
        wL7Ox6nAmyTAnsOPwe8henGRDOgasFoaUM1m81ISYLe4mQRYD1OBp0nA4KuMXlg0ewafUj/Ct1SglvoR
        9lKBDgAAAIACAFAAAAoAQAEAKAAABQCgAAAUAIACAFAAAAoAQAEAKAAABQCgAAAUAIACAFAAAAoAQAEA
        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
        AABJRU5ErkJgggs=
</value>
  </data>
</root>